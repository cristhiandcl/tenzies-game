{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Cristhiandcl8\\\\Desktop\\\\Cristhiandcl\\\\fullStackPackages\\\\react\\\\tenzies-game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false);\n\n  function allNewDice() {\n    const newDice = [];\n\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid()\n      });\n    }\n\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice(prevDice => prevDice.map(die => die.isHeld ? die : { ...die,\n      value: Math.ceil(Math.random() * 6)\n    }));\n  }\n\n  function holdDice(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? { ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n\n  React.useEffect(() => {});\n  const diceElements = dice.map(die => /*#__PURE__*/_jsxDEV(Die, {\n    value: die.value,\n    isHeld: die.isHeld,\n    holdDice: () => holdDice(die.id)\n  }, die.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [tenzies && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Tenzies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions\",\n      children: \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: diceElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDice,\n      children: \"Roll\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"mBhM4pmDk1UgsaV8K35tBPcmDjA=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Cristhiandcl8/Desktop/Cristhiandcl/fullStackPackages/react/tenzies-game/src/App.js"],"names":["React","Die","nanoid","Confetti","App","dice","setDice","useState","allNewDice","tenzies","setTenzies","newDice","i","push","value","Math","ceil","random","isHeld","id","rollDice","prevDice","map","die","holdDice","oldDice","useEffect","diceElements"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,KAAK,CAACO,QAAN,CAAeC,UAAU,EAAzB,CAAxB;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,KAAK,CAACO,QAAN,CAAe,KAAf,CAA9B;;AAEA,WAASC,UAAT,GAAsB;AACpB,UAAMG,OAAO,GAAG,EAAhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3BD,MAAAA,OAAO,CAACE,IAAR,CAAa;AACXC,QAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B,CADI;AAEXC,QAAAA,MAAM,EAAE,KAFG;AAGXC,QAAAA,EAAE,EAAEjB,MAAM;AAHC,OAAb;AAKD;;AACD,WAAOS,OAAP;AACD;;AAED,WAASS,QAAT,GAAoB;AAClBd,IAAAA,OAAO,CAAEe,QAAD,IACNA,QAAQ,CAACC,GAAT,CAAcC,GAAD,IACXA,GAAG,CAACL,MAAJ,GAAaK,GAAb,GAAmB,EAAE,GAAGA,GAAL;AAAUT,MAAAA,KAAK,EAAEC,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,CAA1B;AAAjB,KADrB,CADK,CAAP;AAKD;;AAED,WAASO,QAAT,CAAkBL,EAAlB,EAAsB;AACpBb,IAAAA,OAAO,CAAEmB,OAAD,IACNA,OAAO,CAACH,GAAR,CAAaC,GAAD,IAAS;AACnB,aAAOA,GAAG,CAACJ,EAAJ,KAAWA,EAAX,GAAgB,EAAE,GAAGI,GAAL;AAAUL,QAAAA,MAAM,EAAE,CAACK,GAAG,CAACL;AAAvB,OAAhB,GAAkDK,GAAzD;AACD,KAFD,CADK,CAAP;AAKD;;AAEDvB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM,CAErB,CAFD;AAIA,QAAMC,YAAY,GAAGtB,IAAI,CAACiB,GAAL,CAAUC,GAAD,iBAC5B,QAAC,GAAD;AAEE,IAAA,KAAK,EAAEA,GAAG,CAACT,KAFb;AAGE,IAAA,MAAM,EAAES,GAAG,CAACL,MAHd;AAIE,IAAA,QAAQ,EAAE,MAAMM,QAAQ,CAACD,GAAG,CAACJ,EAAL;AAJ1B,KACOI,GAAG,CAACJ,EADX;AAAA;AAAA;AAAA;AAAA,UADmB,CAArB;AASA,sBACE;AAAA,eACGV,OAAO,iBAAI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YADd,eAEE;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBAAiCkB;AAAjC;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAQ,MAAA,SAAS,EAAC,WAAlB;AAA8B,MAAA,OAAO,EAAEP,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GA3DuBhB,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\n\nexport default function App() {\n  const [dice, setDice] = React.useState(allNewDice());\n  const [tenzies, setTenzies] = React.useState(false)\n\n  function allNewDice() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push({\n        value: Math.ceil(Math.random() * 6),\n        isHeld: false,\n        id: nanoid(),\n      });\n    }\n    return newDice;\n  }\n\n  function rollDice() {\n    setDice((prevDice) =>\n      prevDice.map((die) =>\n        die.isHeld ? die : { ...die, value: Math.ceil(Math.random() * 6) }\n      )\n    );\n  }\n\n  function holdDice(id) {\n    setDice((oldDice) =>\n      oldDice.map((die) => {\n        return die.id === id ? { ...die, isHeld: !die.isHeld } : die;\n      })\n    );\n  }\n\n  React.useEffect(() => {\n      \n  })\n\n  const diceElements = dice.map((die) => (\n    <Die\n      key={die.id}\n      value={die.value}\n      isHeld={die.isHeld}\n      holdDice={() => holdDice(die.id)}\n    />\n  ));\n\n  return (\n    <main>\n      {tenzies && <Confetti />}\n      <h1 className=\"title\">Tenzies</h1>\n      <p className=\"instructions\">\n        Roll until all dice are the same. Click each die to freeze it at its\n        current value between rolls.\n      </p>\n      <div className=\"dice-container\">{diceElements}</div>\n      <button className=\"roll-dice\" onClick={rollDice}>\n        Roll\n      </button>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}